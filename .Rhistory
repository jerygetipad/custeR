View(pit_stops)
pit_stops <- weekend_feed$weekend_race[[1]]$pit_reports |>
data.table::rbindlist() |>
dplyr::mutate(race_id = races[x])
x=1
pit_stops <- weekend_feed$weekend_race[[1]]$pit_reports |>
data.table::rbindlist() |>
dplyr::mutate(race_id = races[x])
View(pit_stops)
pit_stops <- lapply(1:length(races), function(x) {
message(races[x])
url=paste0("https://cf.nascar.com/cacher/",year,"/",series,"/",races[x],"/weekend-feed.json")
suppressWarnings({
weekend_feed <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(inherits(weekend_feed,"try-error")) {
return(list())
}
pit_stops <- weekend_feed$weekend_race[[1]]$pit_reports |>
data.table::rbindlist() |>
dplyr::mutate(race_id = races[x])
}) |> data.tablerbindlist()
pit_stops <- lapply(1:length(races), function(x) {
message(races[x])
url=paste0("https://cf.nascar.com/cacher/",year,"/",series,"/",races[x],"/weekend-feed.json")
suppressWarnings({
weekend_feed <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(inherits(weekend_feed,"try-error")) {
return(list())
}
pit_stops <- weekend_feed$weekend_race[[1]]$pit_reports |>
data.table::rbindlist() |>
dplyr::mutate(race_id = races[x])
}) |> data.table::rbindlist()
View(pit_stops)
View(pit_stops)
#' @export
nas_pits <- function(year=2022,series=1) {
# Check for valid arguments
if ( !(year %in% c(2020:2022)) | !(series %in% c(1,2,3))) {
stop("No lap time data found for the specified year/series")
}
# Get Race Id's for given year + series
load("data/xwalk_race_ids.Rda")
races <- xwalk_race_ids |>
dplyr::filter(race_season==year & series_id==series) |>
dplyr::select(race_id) |>
unlist()
if (length(races)==0) {
stop("No lap time data found for the specified year")
}
pit_stops <- lapply(1:length(races), function(x) {
message(races[x])
url=paste0("https://cf.nascar.com/cacher/",year,"/",series,"/",races[x],"/weekend-feed.json")
suppressWarnings({
weekend_feed <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(inherits(weekend_feed,"try-error")) {
return(list())
}
pit_stops <- weekend_feed$weekend_race[[1]]$pit_reports |>
data.table::rbindlist() |>
dplyr::mutate(race_id = races[x])
}) |> data.table::rbindlist()
return(pit_stops)
}
test <- nas_pits(year=2017)
test <- nas_pits(year=2019)
#' @export
nas_pits <- function(year=2022,series=1) {
# Check for valid arguments
if ( !(year %in% c(2019:2022)) | !(series %in% c(1,2,3))) {
stop("No lap time data found for the specified year/series")
}
# Get Race Id's for given year + series
load("data/xwalk_race_ids.Rda")
races <- xwalk_race_ids |>
dplyr::filter(race_season==year & series_id==series) |>
dplyr::select(race_id) |>
unlist()
if (length(races)==0) {
stop("No lap time data found for the specified year")
}
pit_stops <- lapply(1:length(races), function(x) {
message(races[x])
url=paste0("https://cf.nascar.com/cacher/",year,"/",series,"/",races[x],"/weekend-feed.json")
suppressWarnings({
weekend_feed <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(inherits(weekend_feed,"try-error")) {
return(list())
}
pit_stops <- weekend_feed$weekend_race[[1]]$pit_reports |>
data.table::rbindlist() |>
dplyr::mutate(race_id = races[x])
}) |> data.table::rbindlist()
return(pit_stops)
}
test <- nas_pits(year=2019)
url = paste0("https://cf.nascar.com/cacher/live/series_",series,"/",r,"/live-pit-data.json")
suppressWarnings({
pits <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(class(pits)=="try-error") {
no_data[l] <- r; l = l+1
next
}
View(test)
View(pits)
pit_stops <- weekend_feed$weekend_race[[1]]$pit_reports |>
data.table::rbindlist() |>
dplyr::mutate(race_id = races[x])
View(pit_stops)
pit_stops <- pits |>
data.table::rbindlist() |>
dplyr::mutate(race_id = races[x])
#
pit_stops <- lapply(1:length(races), function(x) {
url = paste0("https://cf.nascar.com/cacher/live/series_",series,"/",r,"/live-pit-data.json")
suppressWarnings({
pits <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(inherits(weekend_feed,"try-error")) {
return(list())
}
pit_stops <- pits |>
data.table::rbindlist() |>
dplyr::mutate(race_id = races[x])
}) |> data.table::rbindlist()
View(pit_stops)
for(year in 2017:2022) {
for(series in c(1,2,3)) {
pit_data <- nas_pits(series=series,year=year)
if(length(pit_data)==0) {next}
races <- unlist(lapply(1:length(pit_data), function(x) unique(pit_data[x]$race_id)))
base = paste0("./data/pits/series_",series,"/")
if(!dir.exists(base)) {
dir.create(base,recursive = TRUE)
}
readr::write_csv(x = pit_data,file = paste0(base,"/",year,".csv"))
}
}
#' @export
nas_pits <- function(year=2022,series=1) {
# Check for valid arguments
if ( !(year %in% c(2017:2022)) | !(series %in% c(1,2,3))) {
stop("No lap time data found for the specified year/series")
}
# Get Race Id's for given year + series
load("data/xwalk_race_ids.Rda")
races <- xwalk_race_ids |>
dplyr::filter(race_season==year & series_id==series) |>
dplyr::select(race_id) |>
unlist()
if (length(races)==0) {
stop("No lap time data found for the specified year")
}
#
if(year %in% c(2017,2018,2019)) {
# Initialize Loop Variables
masterpits <- data.frame()
counter <- 1
no_data <- c()
l <- 1
#
pit_stops <- lapply(1:length(races), function(x) {
message(races[x])
url = paste0("https://cf.nascar.com/cacher/live/series_",series,"/",r,"/live-pit-data.json")
suppressWarnings({
pits <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(inherits(weekend_feed,"try-error")) {
return(list())
}
pit_stops <- pits |>
data.table::rbindlist() |>
dplyr::mutate(race_id = races[x])
}) |> data.table::rbindlist()
} else {
pit_stops <- lapply(1:length(races), function(x) {
message(races[x])
url=paste0("https://cf.nascar.com/cacher/",year,"/",series,"/",races[x],"/weekend-feed.json")
suppressWarnings({
weekend_feed <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(inherits(weekend_feed,"try-error")) {
return(list())
}
pit_stops <- weekend_feed$weekend_race[[1]]$pit_reports |>
data.table::rbindlist() |>
dplyr::mutate(race_id = races[x])
}) |> data.table::rbindlist()
}
return(pit_stops)
}
for(year in 2017:2022) {
for(series in c(1,2,3)) {
pit_data <- nas_pits(series=series,year=year)
if(length(pit_data)==0) {next}
races <- unlist(lapply(1:length(pit_data), function(x) unique(pit_data[x]$race_id)))
base = paste0("./data/pits/series_",series,"/")
if(!dir.exists(base)) {
dir.create(base,recursive = TRUE)
}
readr::write_csv(x = pit_data,file = paste0(base,"/",year,".csv"))
}
}
year=2017
# Check for valid arguments
if ( !(year %in% c(2017:2022)) | !(series %in% c(1,2,3))) {
stop("No lap time data found for the specified year/series")
}
# Get Race Id's for given year + series
load("data/xwalk_race_ids.Rda")
races <- xwalk_race_ids |>
dplyr::filter(race_season==year & series_id==series) |>
dplyr::select(race_id) |>
unlist()
if (length(races)==0) {
stop("No lap time data found for the specified year")
}
View(xwalk_race_ids)
url = paste0("https://cf.nascar.com/cacher/",yr,"/race_list_basic.json")
schedule_feed=jsonlite::read_json(url)
yr=2017
url = paste0("https://cf.nascar.com/cacher/",yr,"/race_list_basic.json")
schedule_feed=jsonlite::read_json(url)
series = paste0("series_",c(1,2,3))
test <- schedule_feed[[1]]
View(test)
View(test)
View(xwalk_race_ids)
url <-
'https://cf.nascar.com/cacher/2022/1/5183/lap-notes.json'
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
View(notes)
url <-
'https://cf.nascar.com/cacher/2022/1/5183/snappytv.json'
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
View(notes)
notes[["tracks"]][["0"]][[2]][["downloads"]][[4]][["url"]]
url <-
'https://cf.nascar.com/cacher/2022/1/5183/driver-recap.json'
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
View(notes)
url <-
'lapFastURL' : 'https://cf.nascar.com/loopstats/prod/2022/1/5183.json'
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
View(notes)
url <-
'https://cf.nascar.com/loopstats/prod/2022/1/5183.json'
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
View(notes)
for(1:6000) {
url <-
paste0('https://cf.nascar.com/loopstats/prod/2017/1/',i,'.json')
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(inherits(weekend_feed,"try-error")) {
return(next)
} else {
race_ids <- append(race_ids,i)
}
}
# Locate 2017 raceids
race_ids <- c()
for(1:6000) {
url <-
paste0('https://cf.nascar.com/loopstats/prod/2017/1/',i,'.json')
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(inherits(weekend_feed,"try-error")) {
return(next)
} else {
race_ids <- append(race_ids,i)
}
}
# Locate 2017 raceids
race_ids <- c()
for(i in 1:6000) {
url <-
paste0('https://cf.nascar.com/loopstats/prod/2017/1/',i,'.json')
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(inherits(weekend_feed,"try-error")) {
return(next)
} else {
race_ids <- append(race_ids,i)
}
}
# Locate 2017 raceids
race_ids <- c()
for(i in 1:6000) {
url <-
paste0('https://cf.nascar.com/loopstats/prod/2017/1/',i,'.json')
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(inherits(notes,"try-error")) {
return(next)
} else {
race_ids <- append(race_ids,i)
}
}
notes
for(i in 995:6000) {
print(i)
url <-
paste0('https://cf.nascar.com/loopstats/prod/2017/1/',i,'.json')
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(inherits(notes,"try-error")) {
return(next)
} else {
race_ids <- append(race_ids,i)
}
}
notes
for(i in 4544:6000) {
print(i)
url <-
paste0('https://cf.nascar.com/loopstats/prod/2017/1/',i,'.json')
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(inherits(notes,"try-error")) {
return(next)
} else {
race_ids <- append(race_ids,i)
}
}
notes
race_ids
# Lapply
test <- lapply(raceids,function(x) {
url <-
paste0('https://cf.nascar.com/loopstats/prod/2017/1/',i,'.json')
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
})
# Lapply
test <- lapply(race_ids,function(x) {
url <-
paste0('https://cf.nascar.com/loopstats/prod/2017/1/',i,'.json')
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
})
View(test)
test[[1]]
race_ids
# Lapply
test <- lapply(race_ids,function(x) {
url <-
paste0('https://cf.nascar.com/loopstats/prod/2017/1/',x,'.json')
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
})
View(test)
# Locate 2017 raceids
race_ids <- c()
for(i in 4899:6000) {
print(i)
url <-
paste0('https://cf.nascar.com/loopstats/prod/2017/1/',i,'.json')
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(inherits(notes,"try-error")) {
return(next)
} else {
race_ids <- append(race_ids,i)
}
}
# Locate 2017 raceids
race_ids <- c()
for(i in 4575:4700) {
print(i)
url <-
paste0('https://cf.nascar.com/loopstats/prod/2017/1/',i,'.json')
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(inherits(notes,"try-error")) {
return(next)
} else {
race_ids <- append(race_ids,i)
}
}
# Lapply
test <- lapply(race_ids,function(x) {
url <-
url = paste0("https://cf.nascar.com/cacher/live/series_",1,"/",r,"/live-pit-data.json")
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
})
# Lapply
test <- lapply(race_ids,function(x) {
url = paste0("https://cf.nascar.com/cacher/live/series_",1,"/",r,"/live-pit-data.json")
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
})
View(test)
# Lapply
test <- lapply(race_ids,function(x) {
url = paste0("https://cf.nascar.com/cacher/live/series_",1,"/",x,"/live-pit-data.json")
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
})
View(test)
# Lapply
test <- lapply(race_ids,function(x) {
url = paste0('https://cf.nascar.com/loopstats/prod/2017/1/',x,'.json')
suppressWarnings({
notes <- try(jsonlite::read_json(path = url),silent=TRUE)
})
return(notes)
})
View(test)
race_ids
races <- xwalk_race_ids |>
dplyr::filter(race_season==year & series_id==series) |>
dplyr::select(race_id) |>
unlist()
# Get Race Id's for given year + series
load("data/xwalk_race_ids.Rda")
races <- xwalk_race_ids |>
dplyr::filter(race_season==year & series_id==series) |>
dplyr::select(race_id) |>
unlist()
# Get Race Id's for given year + series
load("data/xwalk_race_ids.Rda")
year=2019
races <- xwalk_race_ids |>
dplyr::filter(race_season==year & series_id==series) |>
dplyr::select(race_id) |>
unlist()
series=1
races <- xwalk_race_ids |>
dplyr::filter(race_season==year & series_id==series) |>
dplyr::select(race_id) |>
unlist()
if (length(races)==0) {
stop("No lap time data found for the specified year")
}
infractions <- lapply(1:length(races), function(x) {
message(races[x])
url=paste0("https://cf.nascar.com/cacher/",year,"/",series,"/",races[x],"/weekend-feed.json")
suppressWarnings({
weekend_feed <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(inherits(weekend_feed,"try-error")) {
return(list())
}
infractions <- weekend_feed$weekend_race[[1]]$infractions |>
data.table::rbindlist() |>
dplyr::mutate(race_id = races[x])
}) |>
data.table::rbindlist(fill=TRUE)
year=2016
# Get Race Id's for given year + series
load("data/xwalk_race_ids.Rda")
races <- xwalk_race_ids |>
dplyr::filter(race_season==year & series_id==series) |>
dplyr::select(race_id) |>
unlist()
if (length(races)==0) {
stop("No lap time data found for the specified year")
}
x=1
message(races[x])
url=paste0("https://cf.nascar.com/cacher/",year,"/",series,"/",races[x],"/weekend-feed.json")
suppressWarnings({
weekend_feed <- try(jsonlite::read_json(path = url),silent=TRUE)
})
if(inherits(weekend_feed,"try-error")) {
return(list())
}
weekend_feed
year=2019
# Get Race Id's for given year + series
load("data/xwalk_race_ids.Rda")
races <- xwalk_race_ids |>
dplyr::filter(race_season==year & series_id==series) |>
dplyr::select(race_id) |>
unlist()
message(races[x])
url=paste0("https://cf.nascar.com/cacher/",year,"/",series,"/",races[x],"/weekend-feed.json")
suppressWarnings({
weekend_feed <- try(jsonlite::read_json(path = url),silent=TRUE)
})
View(weekend_feed)
