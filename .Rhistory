usethis::use_package("readr")
usethis::use_package("stringr")
usethis::use_package("jsonlite")
usethis::use_package("dplyr")
usethis::use_package("magrittr")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
?get_pits
URL = paste0("https://cf.nascar.com/cacher/",yr,"/race_list_basic.json")
URL = paste0("https://cf.nascar.com/cacher/",2022,"/race_list_basic.json")
schedule_feed=jsonlite::read_json(URL)
sort(names(schedule_feed))
for(year in 2020:2022) {
for(series in c(1,2,3)) {
tmp <- nas_speeds(series=series,year=year)
if(length(tmp)==0) {next}
races <- unlist(lapply(1:length(tmp), function(x) unique(tmp[[x]]$race_id)))
for(r in 1:length(races)) {
base = paste0("./data/speeds/series_",series,"/",year)
if(!dir.exists(base)) {
dir.create(base,recursive = TRUE)
}
readr::write_csv(x = tmp[[r]],file = paste0(base,"/",races[r],".csv"))
}
}
}
#! @export
nas_speeds <- function(year=2022,series=1) {
race_ids <-
readr::read_csv("./data/misc/xwalk_race_ids.csv") %>%
dplyr::filter(race_season == year & series_id == series)
races <- race_ids$race_id
all_races <- list()
counter=1
for(r in races) {
message(r)
tmp = paste0("https://cf.nascar.com/cacher/",year,"/",series,"/",r,"/lap-times.json")
lap_times <- try(jsonlite::read_json(path = tmp))
if(class(lap_times)=="try-error") {
message(paste0(r," has no lap time data"))
next;
}
lap_times_laps <- lap_times$laps
masterdf <- data.frame()
for(drv in 1:length(lap_times_laps)) {
len <- length(lap_times_laps[[drv]]$Laps)
df <- data.frame(matrix(NA,nrow = len, ncol = 4))
names(df) <- c("Lap", "LapTime", "LapSpeed", "RunningPos")
for(i in 1:len) {
df$Lap[i] = lap_times_laps[[drv]]$Laps[[i]]$Lap
if(df$Lap[i]==0) {
df$LapTime <- NA
df$LapSpeed <- NA
}
else if(
is.null(lap_times_laps[[drv]]$Laps[[i]]$LapTime) |
is.null(lap_times_laps[[drv]]$Laps[[i]]$LapSpeed)) {
df$LapTime <- NA
df$LapSpeed <- NA
}
else {
df$LapTime[i] <- lap_times_laps[[drv]]$Laps[[i]]$LapTime
df$LapSpeed[i] <- lap_times_laps[[drv]]$Laps[[i]]$LapSpeed
}
df$RunningPos[i] <- lap_times_laps[[drv]]$Laps[[i]]$RunningPos
}
df$Number <- lap_times_laps[[drv]]$Number
df$FullName <- lap_times_laps[[drv]]$FullName
df$Manufacturer <- lap_times_laps[[drv]]$Manufacturer
df$NASCARDriverID <- lap_times_laps[[drv]]$NASCARDriverID
df$Finish <- lap_times_laps[[drv]]$RunningPos
masterdf <- rbind(masterdf,df)
}
masterdf$race_id = r
masterdf$FullName <- stringr::str_remove_all(masterdf$FullName,"\\* ")
masterdf$FullName <- stringr::str_remove_all(masterdf$FullName," \\#")
masterdf$FullName <- stringr::str_remove_all(masterdf$FullName,"\\(i\\)")
masterdf$FullName <- stringr::str_remove_all(masterdf$FullName," \\(P\\)")
# Fill laps not completed with NA's
# Get Caution Laps
# Lap Notes
flags = lap_times$flags
flags = data.table::rbindlist(flags)
masterdf <- dplyr::left_join(masterdf, flags, by=c("Lap"="LapsCompleted"))
all_races[[counter]] <- masterdf
counter = counter+1
#write_csv(x = masterdf,file = paste0("./files/speeds/series_",series,"/",year,"/",r,".csv"))
}
return(all_races)
}
for(year in 2020:2022) {
for(series in c(1,2,3)) {
tmp <- nas_speeds(series=series,year=year)
if(length(tmp)==0) {next}
races <- unlist(lapply(1:length(tmp), function(x) unique(tmp[[x]]$race_id)))
for(r in 1:length(races)) {
base = paste0("./data/speeds/series_",series,"/",year)
if(!dir.exists(base)) {
dir.create(base,recursive = TRUE)
}
readr::write_csv(x = tmp[[r]],file = paste0(base,"/",races[r],".csv"))
}
}
}
library(magrittr)
for(year in 2020:2022) {
for(series in c(1,2,3)) {
tmp <- nas_speeds(series=series,year=year)
if(length(tmp)==0) {next}
races <- unlist(lapply(1:length(tmp), function(x) unique(tmp[[x]]$race_id)))
for(r in 1:length(races)) {
base = paste0("./data/speeds/series_",series,"/",year)
if(!dir.exists(base)) {
dir.create(base,recursive = TRUE)
}
readr::write_csv(x = tmp[[r]],file = paste0(base,"/",races[r],".csv"))
}
}
}
